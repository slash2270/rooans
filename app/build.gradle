plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("kotlin-kapt")
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.example.rooans'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.rooans"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures{
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-database-ktx:20.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation ("androidx.multidex:multidex:2.0.1") // > 64k 5.0以下適用 5.0以上用2.0以上版本

    // json parser
    implementation 'com.beust:klaxon:5.5'

    //打印http請求日誌
    implementation ("com.squareup.okhttp3:logging-interceptor:4.10.0")
    implementation 'com.orhanobut:logger:2.2.0'
//    // define a BOM and its version
//    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.12.0"))
//
//    // define any required OkHttp artifacts without version
//    implementation("com.squareup.okhttp3:okhttp")
//    implementation("com.squareup.okhttp3:logging-interceptor")

    //用到協程中的flow
    def coroutines_version = "1.7.3"
    implementation ("org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines_version}")
    implementation ("org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_version}")

    //下拉刷新
    implementation 'androidx.paging:paging-runtime:3.0.0-beta01'

    // retrofit
    implementation ("com.squareup.retrofit2:retrofit:2.9.0")
    implementation ("com.squareup.retrofit2:converter-gson:2.9.0")
    implementation ("com.squareup.retrofit2:converter-jackson:2.9.0")
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation ("com.squareup.retrofit2:adapter-rxjava3:2.9.0")
    implementation ("com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2")
    implementation ("io.reactivex.rxjava3:rxjava:3.1.3")
    implementation ("io.reactivex.rxjava3:rxandroid:3.0.0")

    // room
    def room_version = "2.3.0"
    implementation ("androidx.room:room-runtime:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    implementation ("androidx.room:room-rxjava3:$room_version")
    implementation ("androidx.room:room-guava:$room_version")
    testImplementation("androidx.room:room-testing:$room_version")
    annotationProcessor ("androidx.room:room-compiler:$room_version") // For Kotlin use
    kapt("androidx.room:room-compiler:${room_version}")

    // realtime\
    implementation(platform("com.google.firebase:firebase-bom:32.7.1"))
    implementation("com.google.firebase:firebase-database")

    // viewModel
    def lifecycle_version = "2.5.0"
    def arch_version = "2.2.0"
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-service:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-process:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version")
    testImplementation("androidx.arch.core:core-testing:$arch_version")

    // coil
    def coil_version = "1.1.1"
    implementation("io.coil-kt:coil:$coil_version")
    implementation("io.coil-kt:coil-gif:$coil_version")
    implementation("io.coil-kt:coil-svg:$coil_version")
    implementation("io.coil-kt:coil-video:$coil_version")

}